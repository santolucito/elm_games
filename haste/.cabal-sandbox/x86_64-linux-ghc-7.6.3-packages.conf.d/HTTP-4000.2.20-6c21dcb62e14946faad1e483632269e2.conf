name: HTTP
version: 4000.2.20
id: HTTP-4000.2.20-6c21dcb62e14946faad1e483632269e2
license: BSD3
copyright:
maintainer: Ganesh Sittampalam <ganesh@earth.li>
stability:
homepage: https://github.com/haskell/HTTP
package-url:
synopsis: A library for client-side HTTP
description: The HTTP package supports client-side web programming in Haskell. It lets you set up
             HTTP connections, transmitting requests and processing the responses coming back, all
             from within the comforts of Haskell. It's dependent on the network package to operate,
             but other than that, the implementation is all written in Haskell.
             .
             A basic API for issuing single HTTP requests + receiving responses is provided. On top
             of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
             it taking care of handling the management of persistent connections, proxies,
             state (cookies) and authentication credentials required to handle multi-step
             interactions with a web server.
             .
             The representation of the bytes flowing across is extensible via the use of a type class,
             letting you pick the representation of requests and responses that best fits your use.
             Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
             .
             Here's an example use:
             .
             >
             >    do
             >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
             >              -- fetch document and return it (as a 'String'.)
             >      fmap (take 100) (getResponseBody rsp)
             >
             >    do
             >      (_, rsp)
             >         <- Network.Browser.browse $ do
             >               setAllowRedirects True -- handle HTTP redirects
             >               request $ getRequest "http://www.haskell.org/"
             >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules: Network.BufferType Network.Stream
                 Network.StreamDebugger Network.StreamSocket Network.TCP
                 Network.HTTP Network.HTTP.Headers Network.HTTP.Base
                 Network.HTTP.Stream Network.HTTP.Auth Network.HTTP.Cookie
                 Network.HTTP.Proxy Network.HTTP.HandleStream Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
trusted: False
import-dirs: /home/mark/haste/.cabal-sandbox/lib/x86_64-linux-ghc-7.6.3/HTTP-4000.2.20
library-dirs: /home/mark/haste/.cabal-sandbox/lib/x86_64-linux-ghc-7.6.3/HTTP-4000.2.20
hs-libraries: HSHTTP-4000.2.20
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: array-0.4.0.1-3b78425c10ff2dad7acf7e8c8ae014c3
         base-4.6.0.1-8aa5d403c45ea59dcd2c39f123e27d57
         bytestring-0.10.0.2-4f93248f75667c2c3321a7a6761b576f
         mtl-2.2.1-b1605ab44062011ccc4453f773fb3c3d
         network-2.6.2.1-036d299bfa0071b6ef44a9b06e86f64f
         network-uri-2.6.0.3-9140713323f9dea8855cdd423dcf8298
         old-time-1.1.0.1-2f8ea093d0c7014780a8a5772f948883
         parsec-3.1.9-e27b359f725a4251da22d7bc98672a61
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/mark/haste/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.6.3/HTTP-4000.2.20/html/HTTP.haddock
haddock-html: /home/mark/haste/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.6.3/HTTP-4000.2.20/html
